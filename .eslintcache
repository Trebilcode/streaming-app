[{"D:\\Documents\\OneDrive\\current-stuff\\udemy\\Stephen-Grider\\React-course\\section-20-react-router\\streaming-app-client\\src\\index.js":"1","D:\\Documents\\OneDrive\\current-stuff\\udemy\\Stephen-Grider\\React-course\\section-20-react-router\\streaming-app-client\\src\\components\\App.js":"2","D:\\Documents\\OneDrive\\current-stuff\\udemy\\Stephen-Grider\\React-course\\section-20-react-router\\streaming-app-client\\src\\components\\streams\\StreamCreate.js":"3","D:\\Documents\\OneDrive\\current-stuff\\udemy\\Stephen-Grider\\React-course\\section-20-react-router\\streaming-app-client\\src\\components\\streams\\StreamEdit.js":"4","D:\\Documents\\OneDrive\\current-stuff\\udemy\\Stephen-Grider\\React-course\\section-20-react-router\\streaming-app-client\\src\\components\\streams\\StreamDelete.js":"5","D:\\Documents\\OneDrive\\current-stuff\\udemy\\Stephen-Grider\\React-course\\section-20-react-router\\streaming-app-client\\src\\components\\streams\\StreamList.js":"6","D:\\Documents\\OneDrive\\current-stuff\\udemy\\Stephen-Grider\\React-course\\section-20-react-router\\streaming-app-client\\src\\components\\streams\\StreamShow.js":"7","D:\\Documents\\OneDrive\\current-stuff\\udemy\\Stephen-Grider\\React-course\\section-20-react-router\\streaming-app-client\\src\\components\\Header.js":"8","D:\\Documents\\OneDrive\\current-stuff\\udemy\\Stephen-Grider\\React-course\\section-20-react-router\\streaming-app-client\\src\\components\\GoogleAuth.js":"9","D:\\Documents\\OneDrive\\current-stuff\\udemy\\Stephen-Grider\\React-course\\section-20-react-router\\streaming-app-client\\src\\reducers\\index.js":"10","D:\\Documents\\OneDrive\\current-stuff\\udemy\\Stephen-Grider\\React-course\\section-20-react-router\\streaming-app-client\\src\\actions\\index.js":"11","D:\\Documents\\OneDrive\\current-stuff\\udemy\\Stephen-Grider\\React-course\\section-20-react-router\\streaming-app-client\\src\\reducers\\authReducer.js":"12","D:\\Documents\\OneDrive\\current-stuff\\udemy\\Stephen-Grider\\React-course\\section-20-react-router\\streaming-app-client\\src\\actions\\types.js":"13","D:\\Documents\\OneDrive\\current-stuff\\udemy\\Stephen-Grider\\React-course\\section-20-react-router\\streaming-app-client\\src\\components\\Input.js":"14","D:\\Documents\\OneDrive\\current-stuff\\udemy\\Stephen-Grider\\React-course\\section-20-react-router\\streaming-app-client\\src\\apis\\streams.js":"15","D:\\Documents\\OneDrive\\current-stuff\\udemy\\Stephen-Grider\\React-course\\section-20-react-router\\streaming-app-client\\src\\reducers\\streamReducer.js":"16","D:\\Documents\\OneDrive\\current-stuff\\udemy\\Stephen-Grider\\React-course\\section-20-react-router\\streaming-app-client\\src\\History.js":"17","D:\\Documents\\OneDrive\\current-stuff\\udemy\\Stephen-Grider\\React-course\\section-20-react-router\\streaming-app-client\\src\\components\\streams\\StreamForm.js":"18","D:\\Documents\\OneDrive\\current-stuff\\udemy\\Stephen-Grider\\React-course\\section-20-react-router\\streaming-app-client\\src\\components\\Modal.js":"19"},{"size":566,"mtime":1608648554283,"results":"20","hashOfConfig":"21"},{"size":1059,"mtime":1609090997480,"results":"22","hashOfConfig":"21"},{"size":506,"mtime":1608682410520,"results":"23","hashOfConfig":"21"},{"size":811,"mtime":1608684764251,"results":"24","hashOfConfig":"21"},{"size":1303,"mtime":1609025872540,"results":"25","hashOfConfig":"21"},{"size":1740,"mtime":1609090657567,"results":"26","hashOfConfig":"21"},{"size":1120,"mtime":1609099745140,"results":"27","hashOfConfig":"21"},{"size":436,"mtime":1608095941834,"results":"28","hashOfConfig":"21"},{"size":1658,"mtime":1608258848321,"results":"29","hashOfConfig":"21"},{"size":291,"mtime":1608652796749,"results":"30","hashOfConfig":"21"},{"size":1397,"mtime":1609025820368,"results":"31","hashOfConfig":"21"},{"size":404,"mtime":1608258927709,"results":"32","hashOfConfig":"21"},{"size":296,"mtime":1608649869742,"results":"33","hashOfConfig":"21"},{"size":510,"mtime":1608335250533,"results":"34","hashOfConfig":"21"},{"size":98,"mtime":1608648052516,"results":"35","hashOfConfig":"21"},{"size":698,"mtime":1608652668064,"results":"36","hashOfConfig":"21"},{"size":89,"mtime":1608660653061,"results":"37","hashOfConfig":"21"},{"size":909,"mtime":1608682280526,"results":"38","hashOfConfig":"21"},{"size":593,"mtime":1609023284457,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"139a4hg",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"D:\\Documents\\OneDrive\\current-stuff\\udemy\\Stephen-Grider\\React-course\\section-20-react-router\\streaming-app-client\\src\\index.js",[],["87","88"],"D:\\Documents\\OneDrive\\current-stuff\\udemy\\Stephen-Grider\\React-course\\section-20-react-router\\streaming-app-client\\src\\components\\App.js",[],"D:\\Documents\\OneDrive\\current-stuff\\udemy\\Stephen-Grider\\React-course\\section-20-react-router\\streaming-app-client\\src\\components\\streams\\StreamCreate.js",["89"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { createStream } from '../../actions';\r\nimport Input from '../Input';\r\nimport StreamForm from './StreamForm';\r\n\r\nconst StreamCreate = ({ handleSubmit, createStream }) => {\r\n\tconst onSubmit = formValues => {\r\n\t\tcreateStream(formValues);\r\n\t};\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h3>Create a Stream</h3>\r\n\t\t\t<StreamForm onSubmit={onSubmit}></StreamForm>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default connect(null, {\r\n\tcreateStream,\r\n})(StreamCreate);\r\n","D:\\Documents\\OneDrive\\current-stuff\\udemy\\Stephen-Grider\\React-course\\section-20-react-router\\streaming-app-client\\src\\components\\streams\\StreamEdit.js",["90"],"import _ from 'lodash'\r\nimport React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchStream, editStream } from '../../actions';\r\nimport StreamForm from './StreamForm';\r\n\r\nconst StreamEdit = ({\r\n\teditStream,\r\n  fetchStream,\r\n  stream,\r\n\tmatch: {\r\n\t\tparams: { id },\r\n\t},\r\n}) => {\r\n\tuseEffect(() => {\r\n\t\tfetchStream(id);\r\n\t}, []);\r\n\r\n\tconst onSubmit = formValues => {\r\n\t\teditStream(id, formValues);\r\n\t};\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h3>Edit a Stream</h3>\r\n\t\t\t<StreamForm initialValues={_.pick(stream, 'title', 'description')} onSubmit={onSubmit} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n\treturn {\r\n\t\tstream: state.streams[ownProps.match.params.id],\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n\tfetchStream,\r\n\teditStream,\r\n})(StreamEdit);\r\n","D:\\Documents\\OneDrive\\current-stuff\\udemy\\Stephen-Grider\\React-course\\section-20-react-router\\streaming-app-client\\src\\components\\streams\\StreamDelete.js",["91"],"import React, { useEffect } from 'react';\r\nimport Modal from '../Modal';\r\nimport { connect } from 'react-redux';\r\nimport history from '../../History';\r\nimport { deleteStream, fetchStream } from '../../actions';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst StreamDelete = ({\r\n\tmatch: {\r\n\t\tparams: { id },\r\n\t},\r\n  fetchStream,\r\n  deleteStream,\r\n\tstream,\r\n}) => {\r\n\tuseEffect(() => {\r\n\t\tfetchStream(id);\r\n\t}, []);\r\n\r\n\tconst renderActions = () => {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<button onClick={() => deleteStream(id)} className='ui button negative'>\r\n\t\t\t\t\tDelete\r\n\t\t\t\t</button>\r\n\t\t\t\t<Link to='/' className='ui button'>\r\n\t\t\t\t\tCancel\r\n\t\t\t\t</Link>\r\n\t\t\t</>\r\n\t\t);\r\n\t};\r\n\r\n\tconst renderContent = () => {\r\n\t\tif (!stream) {\r\n\t\t\tconsole.log(stream);\r\n\r\n\t\t\treturn 'Are you sure you want to delete this stream?';\r\n\t\t}\r\n\r\n\t\treturn `Are you sure you want to delete the stream with title: ${stream.title}`;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\tonDismiss={() => history.push('/')}\r\n\t\t\ttitle='Delete Stream'\r\n\t\t\tcontent={renderContent()}\r\n\t\t\tactions={renderActions()}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n\tconsole.log(ownProps);\r\n\treturn {\r\n\t\tstream: state.streams[ownProps.match.params.id],\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n\tfetchStream,\r\n\tdeleteStream,\r\n})(StreamDelete);\r\n","D:\\Documents\\OneDrive\\current-stuff\\udemy\\Stephen-Grider\\React-course\\section-20-react-router\\streaming-app-client\\src\\components\\streams\\StreamList.js",["92"],"import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchStreams } from '../../actions';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst StreamList = ({ fetchStreams, streams, currentUserId, isSignedIn }) => {\r\n\tuseEffect(() => {\r\n\t\tfetchStreams();\r\n\t}, []);\r\nconsole.log(streams)\r\n\tconst renderAdmin = stream => {\r\n\t\tif (stream.userId === currentUserId) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className='right floated content'>\r\n\t\t\t\t\t<Link to={`/streams/edit/${stream.id}`} className='ui button primary'>\r\n\t\t\t\t\t\tEdit\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<Link to={`/streams/delete/${stream.id}`} className='ui button negative'>Delete</Link>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tconst renderList = () => {\r\n\t\treturn streams.map(stream => {\r\n\t\t\treturn (\r\n\t\t\t\t<div className='item' key={stream.id}>\r\n\t\t\t\t\t{renderAdmin(stream)}\r\n\t\t\t\t\t<i className='large middle aligned icon camera' />\r\n\t\t\t\t\t<div className='content'>\r\n\t\t\t\t\t\t<Link className=\"header\" to={`/streams/${stream.id}`}>{stream.title}</Link>\r\n\t\t\t\t\t\t<div className='description'>{stream.description}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\r\n\tconst renderCreate = () => {\r\n\t\tif (isSignedIn) {\r\n\t\t\treturn (\r\n\t\t\t\t<div style={{ textAlign: 'right' }}>\r\n\t\t\t\t\t<Link to='/streams/new' className='ui button primary'>\r\n\t\t\t\t\t\tCreate Stream\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>Streams</h2>\r\n\t\t\t<div className='ui celled list'>{renderList()}</div>\r\n\t\t\t{renderCreate()}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tstreams: Object.values(state.streams),\r\n\t\tcurrentUserId: state.auth.userId,\r\n\t\tisSignedIn: state.auth.isSignedIn,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n\tfetchStreams,\r\n})(StreamList);\r\n","D:\\Documents\\OneDrive\\current-stuff\\udemy\\Stephen-Grider\\React-course\\section-20-react-router\\streaming-app-client\\src\\components\\streams\\StreamShow.js",["93"],"import React, { useEffect, useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchStream } from '../../actions';\r\nimport flv from 'flv.js'\r\n\r\nconst StreamShow = ({\r\n  fetchStream,\r\n  stream,\r\n\tmatch: {\r\n\t\tparams: { id },\r\n\t},\r\n}) => {\r\n  const videoRef = useRef(null);\r\n\r\n  let player = undefined\r\n\tuseEffect(() => {\r\n    fetchStream(id)\r\n    buildPLayer(id)\r\n    return () => {\r\n      player.destroy()\r\n    }\r\n  }, []);\r\n\r\n  const buildPLayer = id => {\r\n    if(player || !stream) {\r\n      return;\r\n    }\r\n    player = flv.createPlayer({\r\n\t\t\ttype: 'flv',\r\n\t\t\turl: `http://localhost:8000/live/${id}.flv`,\r\n\t\t});\r\n\t\tplayer.attachMediaElement(videoRef.current);\r\n\t\tplayer.load();\r\n  }\r\n  if(!stream) {\r\n    return <div>...Loading</div>\r\n  }\r\n\r\n  \r\n\treturn (<div>\r\n  <video controls style={{width: '100%'}} ref={videoRef}/>\r\n    <h1>{stream.title}</h1>\r\n    <h5>{stream.description}</h5>\r\n  </div>);\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    stream: state.streams[ownProps.match.params.id]\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchStream })(StreamShow);\r\n","D:\\Documents\\OneDrive\\current-stuff\\udemy\\Stephen-Grider\\React-course\\section-20-react-router\\streaming-app-client\\src\\components\\Header.js",[],"D:\\Documents\\OneDrive\\current-stuff\\udemy\\Stephen-Grider\\React-course\\section-20-react-router\\streaming-app-client\\src\\components\\GoogleAuth.js",["94"],"import React, { useEffect, useRef } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { signIn, signOut } from '../actions';\r\n\r\nconst GoogleAuth = ({ signIn, signOut, isSignedIn }) => {\r\n\tlet authRef = useRef(null);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.gapi.load('client:auth2', () => {\r\n\t\t\twindow.gapi.client\r\n\t\t\t\t.init({\r\n\t\t\t\t\tclientId:\r\n\t\t\t\t\t\t'543771112961-16kfk52agc05jq1a86s4iv1d9cvs4uu3.apps.googleusercontent.com',\r\n\t\t\t\t\tscope: 'email',\r\n\t\t\t\t})\r\n\t\t\t\t.then(() => {\r\n          authRef.current = window.gapi.auth2.getAuthInstance();\r\n          onAuthChange(authRef.current.isSignedIn.get())\r\n\t\t\t\t\tauthRef.current.isSignedIn.listen(onAuthChange);\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err => {});\r\n\t\t});\r\n\t}, []);\r\n\r\n\tconst onAuthChange = isSignedIn => {\r\n\t\tisSignedIn ? signIn(authRef.current.currentUser.get().getId()) : signOut();\r\n\t};\r\n\r\n\tconst onSignInClick = () => {\r\n\t\tauthRef.current.signIn();\r\n\t};\r\n\tconst onSignOutClick = () => {\r\n\t\tauthRef.current.signOut();\r\n\t};\r\n\tconst renderAuthButton = () => {\r\n\t\tif (isSignedIn === null) {\r\n\t\t\treturn null;\r\n\t\t} else if (isSignedIn) {\r\n\t\t\treturn (\r\n\t\t\t\t<button onClick={onSignOutClick} className='ui red google button'>\r\n\t\t\t\t\t<i className='google icon' />\r\n\t\t\t\t\tSign Out\r\n\t\t\t\t</button>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<button onClick={onSignInClick} className='ui red google button'>\r\n\t\t\t\t\t<i className='google icon' />\r\n\t\t\t\t\tSign In with Google\r\n\t\t\t\t</button>\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\treturn <div>{renderAuthButton()}</div>;\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isSignedIn: state.auth.isSignedIn\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n\tsignIn,\r\n\tsignOut,\r\n})(GoogleAuth);\r\n","D:\\Documents\\OneDrive\\current-stuff\\udemy\\Stephen-Grider\\React-course\\section-20-react-router\\streaming-app-client\\src\\reducers\\index.js",[],"D:\\Documents\\OneDrive\\current-stuff\\udemy\\Stephen-Grider\\React-course\\section-20-react-router\\streaming-app-client\\src\\actions\\index.js",[],"D:\\Documents\\OneDrive\\current-stuff\\udemy\\Stephen-Grider\\React-course\\section-20-react-router\\streaming-app-client\\src\\reducers\\authReducer.js",["95"],"import { SIGN_IN, SIGN_OUT } from '../actions/types';\r\n\r\nconst INITIAL_STATE = {\r\n\tisSignedIn: null,\r\n\tuserId: null,\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SIGN_IN:\r\n\t\t\treturn { ...state, isSignedIn: true, userId: action.payload };\r\n\r\n\t\tcase SIGN_OUT:\r\n\t\t\treturn { ...state, isSignedIn: false, userId: null };\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","D:\\Documents\\OneDrive\\current-stuff\\udemy\\Stephen-Grider\\React-course\\section-20-react-router\\streaming-app-client\\src\\actions\\types.js",[],"D:\\Documents\\OneDrive\\current-stuff\\udemy\\Stephen-Grider\\React-course\\section-20-react-router\\streaming-app-client\\src\\components\\Input.js",[],"D:\\Documents\\OneDrive\\current-stuff\\udemy\\Stephen-Grider\\React-course\\section-20-react-router\\streaming-app-client\\src\\apis\\streams.js",[],"D:\\Documents\\OneDrive\\current-stuff\\udemy\\Stephen-Grider\\React-course\\section-20-react-router\\streaming-app-client\\src\\reducers\\streamReducer.js",["96","97"],"import _ from 'lodash';\r\nimport { bindActionCreators } from 'redux';\r\nimport {\r\n\tCREATE_STREAM,\r\n\tFETCH_STREAMS,\r\n\tFETCH_STREAM,\r\n\tDELETE_STREAM,\r\n\tEDIT_STREAM,\r\n} from '../actions/types';\r\n\r\nexport default (state = {}, action) => {\r\n\tswitch (action.type) {\r\n    case FETCH_STREAMS:\r\n      return {...state, ..._.mapKeys(action.payload, 'id')}\r\n\t\tcase FETCH_STREAM:\r\n\t\t\treturn { ...state, [action.payload.id]: action.payload }\r\n\t\tcase CREATE_STREAM:\r\n\t\t\treturn { ...state, [action.payload.id]: action.payload }\r\n\t\tcase EDIT_STREAM:\r\n\t\t\treturn { ...state, [action.payload.id]: action.payload }\r\n\t\tcase DELETE_STREAM:\r\n\t\t\treturn _.omit(state, action.payload)\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","D:\\Documents\\OneDrive\\current-stuff\\udemy\\Stephen-Grider\\React-course\\section-20-react-router\\streaming-app-client\\src\\History.js",[],"D:\\Documents\\OneDrive\\current-stuff\\udemy\\Stephen-Grider\\React-course\\section-20-react-router\\streaming-app-client\\src\\components\\streams\\StreamForm.js",[],"D:\\Documents\\OneDrive\\current-stuff\\udemy\\Stephen-Grider\\React-course\\section-20-react-router\\streaming-app-client\\src\\components\\Modal.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":5,"column":8,"nodeType":"104","messageId":"105","endLine":5,"endColumn":13},{"ruleId":"106","severity":1,"message":"107","line":17,"column":5,"nodeType":"108","endLine":17,"endColumn":7,"suggestions":"109"},{"ruleId":"106","severity":1,"message":"107","line":18,"column":5,"nodeType":"108","endLine":18,"endColumn":7,"suggestions":"110"},{"ruleId":"106","severity":1,"message":"111","line":9,"column":5,"nodeType":"108","endLine":9,"endColumn":7,"suggestions":"112"},{"ruleId":"106","severity":1,"message":"113","line":22,"column":6,"nodeType":"108","endLine":22,"endColumn":8,"suggestions":"114"},{"ruleId":"106","severity":1,"message":"115","line":25,"column":5,"nodeType":"108","endLine":25,"endColumn":7,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":8,"column":1,"nodeType":"119","endLine":19,"endColumn":3},{"ruleId":"102","severity":1,"message":"120","line":2,"column":10,"nodeType":"104","messageId":"105","endLine":2,"endColumn":28},{"ruleId":"117","severity":1,"message":"118","line":11,"column":1,"nodeType":"119","endLine":27,"endColumn":3},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchStream' and 'id'. Either include them or remove the dependency array. If 'fetchStream' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["123"],["124"],"React Hook useEffect has a missing dependency: 'fetchStreams'. Either include it or remove the dependency array. If 'fetchStreams' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["125"],"React Hook useEffect has missing dependencies: 'buildPLayer', 'fetchStream', 'id', and 'player'. Either include them or remove the dependency array. If 'fetchStream' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["126"],"React Hook useEffect has a missing dependency: 'onAuthChange'. Either include it or remove the dependency array.",["127"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'bindActionCreators' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},{"desc":"128","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},"Update the dependencies array to be: [fetchStream, id]",{"range":"137","text":"138"},{"range":"139","text":"138"},"Update the dependencies array to be: [fetchStreams]",{"range":"140","text":"141"},"Update the dependencies array to be: [buildPLayer, fetchStream, id, player]",{"range":"142","text":"143"},"Update the dependencies array to be: [onAuthChange]",{"range":"144","text":"145"},[359,361],"[fetchStream, id]",[412,414],[297,299],"[fetchStreams]",[439,441],"[buildPLayer, fetchStream, id, player]",[705,707],"[onAuthChange]"]